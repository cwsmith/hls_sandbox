// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

`timescale 1ns/1ps
module intersect_control_s_axi
#(parameter
    C_S_AXI_ADDR_WIDTH = 9,
    C_S_AXI_DATA_WIDTH = 32
)(
    // axi4 lite slave signals
    input  wire                          ACLK,
    input  wire                          ARESET,
    input  wire                          ACLK_EN,
    input  wire [C_S_AXI_ADDR_WIDTH-1:0] AWADDR,
    input  wire                          AWVALID,
    output wire                          AWREADY,
    input  wire [C_S_AXI_DATA_WIDTH-1:0] WDATA,
    input  wire [C_S_AXI_DATA_WIDTH/8-1:0] WSTRB,
    input  wire                          WVALID,
    output wire                          WREADY,
    output wire [1:0]                    BRESP,
    output wire                          BVALID,
    input  wire                          BREADY,
    input  wire [C_S_AXI_ADDR_WIDTH-1:0] ARADDR,
    input  wire                          ARVALID,
    output wire                          ARREADY,
    output wire [C_S_AXI_DATA_WIDTH-1:0] RDATA,
    output wire [1:0]                    RRESP,
    output wire                          RVALID,
    input  wire                          RREADY,
    // user signals
    output wire [1023:0]                 adj1_data_V,
    output wire [1023:0]                 adj2_data_V
);
//------------------------Address Info-------------------
// 0x000 : reserved
// 0x004 : reserved
// 0x008 : reserved
// 0x00c : reserved
// 0x010 : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[31:0] (Read/Write)
// 0x014 : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[63:32] (Read/Write)
// 0x018 : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[95:64] (Read/Write)
// 0x01c : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[127:96] (Read/Write)
// 0x020 : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[159:128] (Read/Write)
// 0x024 : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[191:160] (Read/Write)
// 0x028 : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[223:192] (Read/Write)
// 0x02c : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[255:224] (Read/Write)
// 0x030 : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[287:256] (Read/Write)
// 0x034 : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[319:288] (Read/Write)
// 0x038 : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[351:320] (Read/Write)
// 0x03c : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[383:352] (Read/Write)
// 0x040 : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[415:384] (Read/Write)
// 0x044 : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[447:416] (Read/Write)
// 0x048 : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[479:448] (Read/Write)
// 0x04c : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[511:480] (Read/Write)
// 0x050 : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[543:512] (Read/Write)
// 0x054 : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[575:544] (Read/Write)
// 0x058 : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[607:576] (Read/Write)
// 0x05c : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[639:608] (Read/Write)
// 0x060 : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[671:640] (Read/Write)
// 0x064 : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[703:672] (Read/Write)
// 0x068 : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[735:704] (Read/Write)
// 0x06c : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[767:736] (Read/Write)
// 0x070 : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[799:768] (Read/Write)
// 0x074 : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[831:800] (Read/Write)
// 0x078 : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[863:832] (Read/Write)
// 0x07c : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[895:864] (Read/Write)
// 0x080 : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[927:896] (Read/Write)
// 0x084 : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[959:928] (Read/Write)
// 0x088 : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[991:960] (Read/Write)
// 0x08c : Data signal of adj1_data_V
//         bit 31~0 - adj1_data_V[1023:992] (Read/Write)
// 0x090 : reserved
// 0x094 : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[31:0] (Read/Write)
// 0x098 : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[63:32] (Read/Write)
// 0x09c : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[95:64] (Read/Write)
// 0x0a0 : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[127:96] (Read/Write)
// 0x0a4 : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[159:128] (Read/Write)
// 0x0a8 : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[191:160] (Read/Write)
// 0x0ac : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[223:192] (Read/Write)
// 0x0b0 : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[255:224] (Read/Write)
// 0x0b4 : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[287:256] (Read/Write)
// 0x0b8 : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[319:288] (Read/Write)
// 0x0bc : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[351:320] (Read/Write)
// 0x0c0 : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[383:352] (Read/Write)
// 0x0c4 : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[415:384] (Read/Write)
// 0x0c8 : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[447:416] (Read/Write)
// 0x0cc : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[479:448] (Read/Write)
// 0x0d0 : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[511:480] (Read/Write)
// 0x0d4 : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[543:512] (Read/Write)
// 0x0d8 : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[575:544] (Read/Write)
// 0x0dc : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[607:576] (Read/Write)
// 0x0e0 : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[639:608] (Read/Write)
// 0x0e4 : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[671:640] (Read/Write)
// 0x0e8 : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[703:672] (Read/Write)
// 0x0ec : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[735:704] (Read/Write)
// 0x0f0 : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[767:736] (Read/Write)
// 0x0f4 : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[799:768] (Read/Write)
// 0x0f8 : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[831:800] (Read/Write)
// 0x0fc : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[863:832] (Read/Write)
// 0x100 : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[895:864] (Read/Write)
// 0x104 : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[927:896] (Read/Write)
// 0x108 : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[959:928] (Read/Write)
// 0x10c : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[991:960] (Read/Write)
// 0x110 : Data signal of adj2_data_V
//         bit 31~0 - adj2_data_V[1023:992] (Read/Write)
// 0x114 : reserved
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

//------------------------Parameter----------------------
localparam
    ADDR_ADJ1_DATA_V_DATA_0  = 9'h010,
    ADDR_ADJ1_DATA_V_DATA_1  = 9'h014,
    ADDR_ADJ1_DATA_V_DATA_2  = 9'h018,
    ADDR_ADJ1_DATA_V_DATA_3  = 9'h01c,
    ADDR_ADJ1_DATA_V_DATA_4  = 9'h020,
    ADDR_ADJ1_DATA_V_DATA_5  = 9'h024,
    ADDR_ADJ1_DATA_V_DATA_6  = 9'h028,
    ADDR_ADJ1_DATA_V_DATA_7  = 9'h02c,
    ADDR_ADJ1_DATA_V_DATA_8  = 9'h030,
    ADDR_ADJ1_DATA_V_DATA_9  = 9'h034,
    ADDR_ADJ1_DATA_V_DATA_10 = 9'h038,
    ADDR_ADJ1_DATA_V_DATA_11 = 9'h03c,
    ADDR_ADJ1_DATA_V_DATA_12 = 9'h040,
    ADDR_ADJ1_DATA_V_DATA_13 = 9'h044,
    ADDR_ADJ1_DATA_V_DATA_14 = 9'h048,
    ADDR_ADJ1_DATA_V_DATA_15 = 9'h04c,
    ADDR_ADJ1_DATA_V_DATA_16 = 9'h050,
    ADDR_ADJ1_DATA_V_DATA_17 = 9'h054,
    ADDR_ADJ1_DATA_V_DATA_18 = 9'h058,
    ADDR_ADJ1_DATA_V_DATA_19 = 9'h05c,
    ADDR_ADJ1_DATA_V_DATA_20 = 9'h060,
    ADDR_ADJ1_DATA_V_DATA_21 = 9'h064,
    ADDR_ADJ1_DATA_V_DATA_22 = 9'h068,
    ADDR_ADJ1_DATA_V_DATA_23 = 9'h06c,
    ADDR_ADJ1_DATA_V_DATA_24 = 9'h070,
    ADDR_ADJ1_DATA_V_DATA_25 = 9'h074,
    ADDR_ADJ1_DATA_V_DATA_26 = 9'h078,
    ADDR_ADJ1_DATA_V_DATA_27 = 9'h07c,
    ADDR_ADJ1_DATA_V_DATA_28 = 9'h080,
    ADDR_ADJ1_DATA_V_DATA_29 = 9'h084,
    ADDR_ADJ1_DATA_V_DATA_30 = 9'h088,
    ADDR_ADJ1_DATA_V_DATA_31 = 9'h08c,
    ADDR_ADJ1_DATA_V_CTRL    = 9'h090,
    ADDR_ADJ2_DATA_V_DATA_0  = 9'h094,
    ADDR_ADJ2_DATA_V_DATA_1  = 9'h098,
    ADDR_ADJ2_DATA_V_DATA_2  = 9'h09c,
    ADDR_ADJ2_DATA_V_DATA_3  = 9'h0a0,
    ADDR_ADJ2_DATA_V_DATA_4  = 9'h0a4,
    ADDR_ADJ2_DATA_V_DATA_5  = 9'h0a8,
    ADDR_ADJ2_DATA_V_DATA_6  = 9'h0ac,
    ADDR_ADJ2_DATA_V_DATA_7  = 9'h0b0,
    ADDR_ADJ2_DATA_V_DATA_8  = 9'h0b4,
    ADDR_ADJ2_DATA_V_DATA_9  = 9'h0b8,
    ADDR_ADJ2_DATA_V_DATA_10 = 9'h0bc,
    ADDR_ADJ2_DATA_V_DATA_11 = 9'h0c0,
    ADDR_ADJ2_DATA_V_DATA_12 = 9'h0c4,
    ADDR_ADJ2_DATA_V_DATA_13 = 9'h0c8,
    ADDR_ADJ2_DATA_V_DATA_14 = 9'h0cc,
    ADDR_ADJ2_DATA_V_DATA_15 = 9'h0d0,
    ADDR_ADJ2_DATA_V_DATA_16 = 9'h0d4,
    ADDR_ADJ2_DATA_V_DATA_17 = 9'h0d8,
    ADDR_ADJ2_DATA_V_DATA_18 = 9'h0dc,
    ADDR_ADJ2_DATA_V_DATA_19 = 9'h0e0,
    ADDR_ADJ2_DATA_V_DATA_20 = 9'h0e4,
    ADDR_ADJ2_DATA_V_DATA_21 = 9'h0e8,
    ADDR_ADJ2_DATA_V_DATA_22 = 9'h0ec,
    ADDR_ADJ2_DATA_V_DATA_23 = 9'h0f0,
    ADDR_ADJ2_DATA_V_DATA_24 = 9'h0f4,
    ADDR_ADJ2_DATA_V_DATA_25 = 9'h0f8,
    ADDR_ADJ2_DATA_V_DATA_26 = 9'h0fc,
    ADDR_ADJ2_DATA_V_DATA_27 = 9'h100,
    ADDR_ADJ2_DATA_V_DATA_28 = 9'h104,
    ADDR_ADJ2_DATA_V_DATA_29 = 9'h108,
    ADDR_ADJ2_DATA_V_DATA_30 = 9'h10c,
    ADDR_ADJ2_DATA_V_DATA_31 = 9'h110,
    ADDR_ADJ2_DATA_V_CTRL    = 9'h114,
    WRIDLE                   = 2'd0,
    WRDATA                   = 2'd1,
    WRRESP                   = 2'd2,
    WRRESET                  = 2'd3,
    RDIDLE                   = 2'd0,
    RDDATA                   = 2'd1,
    RDRESET                  = 2'd2,
    ADDR_BITS         = 9;

//------------------------Local signal-------------------
    reg  [1:0]                    wstate = WRRESET;
    reg  [1:0]                    wnext;
    reg  [ADDR_BITS-1:0]          waddr;
    wire [31:0]                   wmask;
    wire                          aw_hs;
    wire                          w_hs;
    reg  [1:0]                    rstate = RDRESET;
    reg  [1:0]                    rnext;
    reg  [31:0]                   rdata;
    wire                          ar_hs;
    wire [ADDR_BITS-1:0]          raddr;
    // internal registers
    reg  [1023:0]                 int_adj1_data_V = 'b0;
    reg  [1023:0]                 int_adj2_data_V = 'b0;

//------------------------Instantiation------------------

//------------------------AXI write fsm------------------
assign AWREADY = (wstate == WRIDLE);
assign WREADY  = (wstate == WRDATA);
assign BRESP   = 2'b00;  // OKAY
assign BVALID  = (wstate == WRRESP);
assign wmask   = { {8{WSTRB[3]}}, {8{WSTRB[2]}}, {8{WSTRB[1]}}, {8{WSTRB[0]}} };
assign aw_hs   = AWVALID & AWREADY;
assign w_hs    = WVALID & WREADY;

// wstate
always @(posedge ACLK) begin
    if (ARESET)
        wstate <= WRRESET;
    else if (ACLK_EN)
        wstate <= wnext;
end

// wnext
always @(*) begin
    case (wstate)
        WRIDLE:
            if (AWVALID)
                wnext = WRDATA;
            else
                wnext = WRIDLE;
        WRDATA:
            if (WVALID)
                wnext = WRRESP;
            else
                wnext = WRDATA;
        WRRESP:
            if (BREADY)
                wnext = WRIDLE;
            else
                wnext = WRRESP;
        default:
            wnext = WRIDLE;
    endcase
end

// waddr
always @(posedge ACLK) begin
    if (ACLK_EN) begin
        if (aw_hs)
            waddr <= AWADDR[ADDR_BITS-1:0];
    end
end

//------------------------AXI read fsm-------------------
assign ARREADY = (rstate == RDIDLE);
assign RDATA   = rdata;
assign RRESP   = 2'b00;  // OKAY
assign RVALID  = (rstate == RDDATA);
assign ar_hs   = ARVALID & ARREADY;
assign raddr   = ARADDR[ADDR_BITS-1:0];

// rstate
always @(posedge ACLK) begin
    if (ARESET)
        rstate <= RDRESET;
    else if (ACLK_EN)
        rstate <= rnext;
end

// rnext
always @(*) begin
    case (rstate)
        RDIDLE:
            if (ARVALID)
                rnext = RDDATA;
            else
                rnext = RDIDLE;
        RDDATA:
            if (RREADY & RVALID)
                rnext = RDIDLE;
            else
                rnext = RDDATA;
        default:
            rnext = RDIDLE;
    endcase
end

// rdata
always @(posedge ACLK) begin
    if (ACLK_EN) begin
        if (ar_hs) begin
            rdata <= 1'b0;
            case (raddr)
                ADDR_ADJ1_DATA_V_DATA_0: begin
                    rdata <= int_adj1_data_V[31:0];
                end
                ADDR_ADJ1_DATA_V_DATA_1: begin
                    rdata <= int_adj1_data_V[63:32];
                end
                ADDR_ADJ1_DATA_V_DATA_2: begin
                    rdata <= int_adj1_data_V[95:64];
                end
                ADDR_ADJ1_DATA_V_DATA_3: begin
                    rdata <= int_adj1_data_V[127:96];
                end
                ADDR_ADJ1_DATA_V_DATA_4: begin
                    rdata <= int_adj1_data_V[159:128];
                end
                ADDR_ADJ1_DATA_V_DATA_5: begin
                    rdata <= int_adj1_data_V[191:160];
                end
                ADDR_ADJ1_DATA_V_DATA_6: begin
                    rdata <= int_adj1_data_V[223:192];
                end
                ADDR_ADJ1_DATA_V_DATA_7: begin
                    rdata <= int_adj1_data_V[255:224];
                end
                ADDR_ADJ1_DATA_V_DATA_8: begin
                    rdata <= int_adj1_data_V[287:256];
                end
                ADDR_ADJ1_DATA_V_DATA_9: begin
                    rdata <= int_adj1_data_V[319:288];
                end
                ADDR_ADJ1_DATA_V_DATA_10: begin
                    rdata <= int_adj1_data_V[351:320];
                end
                ADDR_ADJ1_DATA_V_DATA_11: begin
                    rdata <= int_adj1_data_V[383:352];
                end
                ADDR_ADJ1_DATA_V_DATA_12: begin
                    rdata <= int_adj1_data_V[415:384];
                end
                ADDR_ADJ1_DATA_V_DATA_13: begin
                    rdata <= int_adj1_data_V[447:416];
                end
                ADDR_ADJ1_DATA_V_DATA_14: begin
                    rdata <= int_adj1_data_V[479:448];
                end
                ADDR_ADJ1_DATA_V_DATA_15: begin
                    rdata <= int_adj1_data_V[511:480];
                end
                ADDR_ADJ1_DATA_V_DATA_16: begin
                    rdata <= int_adj1_data_V[543:512];
                end
                ADDR_ADJ1_DATA_V_DATA_17: begin
                    rdata <= int_adj1_data_V[575:544];
                end
                ADDR_ADJ1_DATA_V_DATA_18: begin
                    rdata <= int_adj1_data_V[607:576];
                end
                ADDR_ADJ1_DATA_V_DATA_19: begin
                    rdata <= int_adj1_data_V[639:608];
                end
                ADDR_ADJ1_DATA_V_DATA_20: begin
                    rdata <= int_adj1_data_V[671:640];
                end
                ADDR_ADJ1_DATA_V_DATA_21: begin
                    rdata <= int_adj1_data_V[703:672];
                end
                ADDR_ADJ1_DATA_V_DATA_22: begin
                    rdata <= int_adj1_data_V[735:704];
                end
                ADDR_ADJ1_DATA_V_DATA_23: begin
                    rdata <= int_adj1_data_V[767:736];
                end
                ADDR_ADJ1_DATA_V_DATA_24: begin
                    rdata <= int_adj1_data_V[799:768];
                end
                ADDR_ADJ1_DATA_V_DATA_25: begin
                    rdata <= int_adj1_data_V[831:800];
                end
                ADDR_ADJ1_DATA_V_DATA_26: begin
                    rdata <= int_adj1_data_V[863:832];
                end
                ADDR_ADJ1_DATA_V_DATA_27: begin
                    rdata <= int_adj1_data_V[895:864];
                end
                ADDR_ADJ1_DATA_V_DATA_28: begin
                    rdata <= int_adj1_data_V[927:896];
                end
                ADDR_ADJ1_DATA_V_DATA_29: begin
                    rdata <= int_adj1_data_V[959:928];
                end
                ADDR_ADJ1_DATA_V_DATA_30: begin
                    rdata <= int_adj1_data_V[991:960];
                end
                ADDR_ADJ1_DATA_V_DATA_31: begin
                    rdata <= int_adj1_data_V[1023:992];
                end
                ADDR_ADJ2_DATA_V_DATA_0: begin
                    rdata <= int_adj2_data_V[31:0];
                end
                ADDR_ADJ2_DATA_V_DATA_1: begin
                    rdata <= int_adj2_data_V[63:32];
                end
                ADDR_ADJ2_DATA_V_DATA_2: begin
                    rdata <= int_adj2_data_V[95:64];
                end
                ADDR_ADJ2_DATA_V_DATA_3: begin
                    rdata <= int_adj2_data_V[127:96];
                end
                ADDR_ADJ2_DATA_V_DATA_4: begin
                    rdata <= int_adj2_data_V[159:128];
                end
                ADDR_ADJ2_DATA_V_DATA_5: begin
                    rdata <= int_adj2_data_V[191:160];
                end
                ADDR_ADJ2_DATA_V_DATA_6: begin
                    rdata <= int_adj2_data_V[223:192];
                end
                ADDR_ADJ2_DATA_V_DATA_7: begin
                    rdata <= int_adj2_data_V[255:224];
                end
                ADDR_ADJ2_DATA_V_DATA_8: begin
                    rdata <= int_adj2_data_V[287:256];
                end
                ADDR_ADJ2_DATA_V_DATA_9: begin
                    rdata <= int_adj2_data_V[319:288];
                end
                ADDR_ADJ2_DATA_V_DATA_10: begin
                    rdata <= int_adj2_data_V[351:320];
                end
                ADDR_ADJ2_DATA_V_DATA_11: begin
                    rdata <= int_adj2_data_V[383:352];
                end
                ADDR_ADJ2_DATA_V_DATA_12: begin
                    rdata <= int_adj2_data_V[415:384];
                end
                ADDR_ADJ2_DATA_V_DATA_13: begin
                    rdata <= int_adj2_data_V[447:416];
                end
                ADDR_ADJ2_DATA_V_DATA_14: begin
                    rdata <= int_adj2_data_V[479:448];
                end
                ADDR_ADJ2_DATA_V_DATA_15: begin
                    rdata <= int_adj2_data_V[511:480];
                end
                ADDR_ADJ2_DATA_V_DATA_16: begin
                    rdata <= int_adj2_data_V[543:512];
                end
                ADDR_ADJ2_DATA_V_DATA_17: begin
                    rdata <= int_adj2_data_V[575:544];
                end
                ADDR_ADJ2_DATA_V_DATA_18: begin
                    rdata <= int_adj2_data_V[607:576];
                end
                ADDR_ADJ2_DATA_V_DATA_19: begin
                    rdata <= int_adj2_data_V[639:608];
                end
                ADDR_ADJ2_DATA_V_DATA_20: begin
                    rdata <= int_adj2_data_V[671:640];
                end
                ADDR_ADJ2_DATA_V_DATA_21: begin
                    rdata <= int_adj2_data_V[703:672];
                end
                ADDR_ADJ2_DATA_V_DATA_22: begin
                    rdata <= int_adj2_data_V[735:704];
                end
                ADDR_ADJ2_DATA_V_DATA_23: begin
                    rdata <= int_adj2_data_V[767:736];
                end
                ADDR_ADJ2_DATA_V_DATA_24: begin
                    rdata <= int_adj2_data_V[799:768];
                end
                ADDR_ADJ2_DATA_V_DATA_25: begin
                    rdata <= int_adj2_data_V[831:800];
                end
                ADDR_ADJ2_DATA_V_DATA_26: begin
                    rdata <= int_adj2_data_V[863:832];
                end
                ADDR_ADJ2_DATA_V_DATA_27: begin
                    rdata <= int_adj2_data_V[895:864];
                end
                ADDR_ADJ2_DATA_V_DATA_28: begin
                    rdata <= int_adj2_data_V[927:896];
                end
                ADDR_ADJ2_DATA_V_DATA_29: begin
                    rdata <= int_adj2_data_V[959:928];
                end
                ADDR_ADJ2_DATA_V_DATA_30: begin
                    rdata <= int_adj2_data_V[991:960];
                end
                ADDR_ADJ2_DATA_V_DATA_31: begin
                    rdata <= int_adj2_data_V[1023:992];
                end
            endcase
        end
    end
end


//------------------------Register logic-----------------
assign adj1_data_V = int_adj1_data_V;
assign adj2_data_V = int_adj2_data_V;
// int_adj1_data_V[31:0]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[31:0] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_0)
            int_adj1_data_V[31:0] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[31:0] & ~wmask);
    end
end

// int_adj1_data_V[63:32]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[63:32] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_1)
            int_adj1_data_V[63:32] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[63:32] & ~wmask);
    end
end

// int_adj1_data_V[95:64]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[95:64] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_2)
            int_adj1_data_V[95:64] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[95:64] & ~wmask);
    end
end

// int_adj1_data_V[127:96]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[127:96] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_3)
            int_adj1_data_V[127:96] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[127:96] & ~wmask);
    end
end

// int_adj1_data_V[159:128]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[159:128] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_4)
            int_adj1_data_V[159:128] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[159:128] & ~wmask);
    end
end

// int_adj1_data_V[191:160]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[191:160] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_5)
            int_adj1_data_V[191:160] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[191:160] & ~wmask);
    end
end

// int_adj1_data_V[223:192]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[223:192] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_6)
            int_adj1_data_V[223:192] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[223:192] & ~wmask);
    end
end

// int_adj1_data_V[255:224]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[255:224] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_7)
            int_adj1_data_V[255:224] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[255:224] & ~wmask);
    end
end

// int_adj1_data_V[287:256]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[287:256] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_8)
            int_adj1_data_V[287:256] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[287:256] & ~wmask);
    end
end

// int_adj1_data_V[319:288]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[319:288] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_9)
            int_adj1_data_V[319:288] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[319:288] & ~wmask);
    end
end

// int_adj1_data_V[351:320]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[351:320] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_10)
            int_adj1_data_V[351:320] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[351:320] & ~wmask);
    end
end

// int_adj1_data_V[383:352]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[383:352] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_11)
            int_adj1_data_V[383:352] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[383:352] & ~wmask);
    end
end

// int_adj1_data_V[415:384]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[415:384] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_12)
            int_adj1_data_V[415:384] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[415:384] & ~wmask);
    end
end

// int_adj1_data_V[447:416]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[447:416] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_13)
            int_adj1_data_V[447:416] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[447:416] & ~wmask);
    end
end

// int_adj1_data_V[479:448]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[479:448] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_14)
            int_adj1_data_V[479:448] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[479:448] & ~wmask);
    end
end

// int_adj1_data_V[511:480]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[511:480] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_15)
            int_adj1_data_V[511:480] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[511:480] & ~wmask);
    end
end

// int_adj1_data_V[543:512]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[543:512] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_16)
            int_adj1_data_V[543:512] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[543:512] & ~wmask);
    end
end

// int_adj1_data_V[575:544]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[575:544] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_17)
            int_adj1_data_V[575:544] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[575:544] & ~wmask);
    end
end

// int_adj1_data_V[607:576]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[607:576] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_18)
            int_adj1_data_V[607:576] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[607:576] & ~wmask);
    end
end

// int_adj1_data_V[639:608]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[639:608] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_19)
            int_adj1_data_V[639:608] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[639:608] & ~wmask);
    end
end

// int_adj1_data_V[671:640]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[671:640] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_20)
            int_adj1_data_V[671:640] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[671:640] & ~wmask);
    end
end

// int_adj1_data_V[703:672]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[703:672] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_21)
            int_adj1_data_V[703:672] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[703:672] & ~wmask);
    end
end

// int_adj1_data_V[735:704]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[735:704] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_22)
            int_adj1_data_V[735:704] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[735:704] & ~wmask);
    end
end

// int_adj1_data_V[767:736]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[767:736] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_23)
            int_adj1_data_V[767:736] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[767:736] & ~wmask);
    end
end

// int_adj1_data_V[799:768]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[799:768] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_24)
            int_adj1_data_V[799:768] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[799:768] & ~wmask);
    end
end

// int_adj1_data_V[831:800]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[831:800] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_25)
            int_adj1_data_V[831:800] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[831:800] & ~wmask);
    end
end

// int_adj1_data_V[863:832]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[863:832] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_26)
            int_adj1_data_V[863:832] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[863:832] & ~wmask);
    end
end

// int_adj1_data_V[895:864]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[895:864] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_27)
            int_adj1_data_V[895:864] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[895:864] & ~wmask);
    end
end

// int_adj1_data_V[927:896]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[927:896] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_28)
            int_adj1_data_V[927:896] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[927:896] & ~wmask);
    end
end

// int_adj1_data_V[959:928]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[959:928] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_29)
            int_adj1_data_V[959:928] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[959:928] & ~wmask);
    end
end

// int_adj1_data_V[991:960]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[991:960] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_30)
            int_adj1_data_V[991:960] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[991:960] & ~wmask);
    end
end

// int_adj1_data_V[1023:992]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj1_data_V[1023:992] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ1_DATA_V_DATA_31)
            int_adj1_data_V[1023:992] <= (WDATA[31:0] & wmask) | (int_adj1_data_V[1023:992] & ~wmask);
    end
end

// int_adj2_data_V[31:0]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[31:0] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_0)
            int_adj2_data_V[31:0] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[31:0] & ~wmask);
    end
end

// int_adj2_data_V[63:32]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[63:32] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_1)
            int_adj2_data_V[63:32] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[63:32] & ~wmask);
    end
end

// int_adj2_data_V[95:64]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[95:64] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_2)
            int_adj2_data_V[95:64] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[95:64] & ~wmask);
    end
end

// int_adj2_data_V[127:96]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[127:96] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_3)
            int_adj2_data_V[127:96] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[127:96] & ~wmask);
    end
end

// int_adj2_data_V[159:128]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[159:128] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_4)
            int_adj2_data_V[159:128] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[159:128] & ~wmask);
    end
end

// int_adj2_data_V[191:160]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[191:160] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_5)
            int_adj2_data_V[191:160] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[191:160] & ~wmask);
    end
end

// int_adj2_data_V[223:192]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[223:192] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_6)
            int_adj2_data_V[223:192] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[223:192] & ~wmask);
    end
end

// int_adj2_data_V[255:224]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[255:224] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_7)
            int_adj2_data_V[255:224] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[255:224] & ~wmask);
    end
end

// int_adj2_data_V[287:256]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[287:256] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_8)
            int_adj2_data_V[287:256] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[287:256] & ~wmask);
    end
end

// int_adj2_data_V[319:288]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[319:288] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_9)
            int_adj2_data_V[319:288] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[319:288] & ~wmask);
    end
end

// int_adj2_data_V[351:320]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[351:320] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_10)
            int_adj2_data_V[351:320] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[351:320] & ~wmask);
    end
end

// int_adj2_data_V[383:352]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[383:352] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_11)
            int_adj2_data_V[383:352] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[383:352] & ~wmask);
    end
end

// int_adj2_data_V[415:384]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[415:384] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_12)
            int_adj2_data_V[415:384] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[415:384] & ~wmask);
    end
end

// int_adj2_data_V[447:416]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[447:416] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_13)
            int_adj2_data_V[447:416] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[447:416] & ~wmask);
    end
end

// int_adj2_data_V[479:448]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[479:448] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_14)
            int_adj2_data_V[479:448] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[479:448] & ~wmask);
    end
end

// int_adj2_data_V[511:480]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[511:480] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_15)
            int_adj2_data_V[511:480] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[511:480] & ~wmask);
    end
end

// int_adj2_data_V[543:512]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[543:512] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_16)
            int_adj2_data_V[543:512] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[543:512] & ~wmask);
    end
end

// int_adj2_data_V[575:544]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[575:544] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_17)
            int_adj2_data_V[575:544] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[575:544] & ~wmask);
    end
end

// int_adj2_data_V[607:576]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[607:576] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_18)
            int_adj2_data_V[607:576] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[607:576] & ~wmask);
    end
end

// int_adj2_data_V[639:608]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[639:608] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_19)
            int_adj2_data_V[639:608] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[639:608] & ~wmask);
    end
end

// int_adj2_data_V[671:640]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[671:640] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_20)
            int_adj2_data_V[671:640] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[671:640] & ~wmask);
    end
end

// int_adj2_data_V[703:672]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[703:672] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_21)
            int_adj2_data_V[703:672] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[703:672] & ~wmask);
    end
end

// int_adj2_data_V[735:704]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[735:704] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_22)
            int_adj2_data_V[735:704] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[735:704] & ~wmask);
    end
end

// int_adj2_data_V[767:736]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[767:736] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_23)
            int_adj2_data_V[767:736] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[767:736] & ~wmask);
    end
end

// int_adj2_data_V[799:768]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[799:768] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_24)
            int_adj2_data_V[799:768] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[799:768] & ~wmask);
    end
end

// int_adj2_data_V[831:800]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[831:800] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_25)
            int_adj2_data_V[831:800] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[831:800] & ~wmask);
    end
end

// int_adj2_data_V[863:832]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[863:832] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_26)
            int_adj2_data_V[863:832] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[863:832] & ~wmask);
    end
end

// int_adj2_data_V[895:864]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[895:864] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_27)
            int_adj2_data_V[895:864] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[895:864] & ~wmask);
    end
end

// int_adj2_data_V[927:896]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[927:896] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_28)
            int_adj2_data_V[927:896] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[927:896] & ~wmask);
    end
end

// int_adj2_data_V[959:928]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[959:928] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_29)
            int_adj2_data_V[959:928] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[959:928] & ~wmask);
    end
end

// int_adj2_data_V[991:960]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[991:960] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_30)
            int_adj2_data_V[991:960] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[991:960] & ~wmask);
    end
end

// int_adj2_data_V[1023:992]
always @(posedge ACLK) begin
    if (ARESET)
        int_adj2_data_V[1023:992] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_ADJ2_DATA_V_DATA_31)
            int_adj2_data_V[1023:992] <= (WDATA[31:0] & wmask) | (int_adj2_data_V[1023:992] & ~wmask);
    end
end


//------------------------Memory logic-------------------

endmodule
