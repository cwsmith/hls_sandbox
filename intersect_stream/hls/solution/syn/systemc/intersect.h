// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _intersect_HH_
#define _intersect_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "readCompare.h"
#include "fifo_w32_d1_A.h"
#include "intersect_control_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CONTROL_ADDR_WIDTH = 9,
         unsigned int C_S_AXI_CONTROL_DATA_WIDTH = 32>
struct intersect : public sc_module {
    // Port declarations 23
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > s_axi_control_AWVALID;
    sc_out< sc_logic > s_axi_control_AWREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_ADDR_WIDTH> > s_axi_control_AWADDR;
    sc_in< sc_logic > s_axi_control_WVALID;
    sc_out< sc_logic > s_axi_control_WREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH> > s_axi_control_WDATA;
    sc_in< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH/8> > s_axi_control_WSTRB;
    sc_in< sc_logic > s_axi_control_ARVALID;
    sc_out< sc_logic > s_axi_control_ARREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_ADDR_WIDTH> > s_axi_control_ARADDR;
    sc_out< sc_logic > s_axi_control_RVALID;
    sc_in< sc_logic > s_axi_control_RREADY;
    sc_out< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH> > s_axi_control_RDATA;
    sc_out< sc_lv<2> > s_axi_control_RRESP;
    sc_out< sc_logic > s_axi_control_BVALID;
    sc_in< sc_logic > s_axi_control_BREADY;
    sc_out< sc_lv<2> > s_axi_control_BRESP;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    intersect(sc_module_name name);
    SC_HAS_PROCESS(intersect);

    ~intersect();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    intersect_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>* intersect_control_s_axi_U;
    readCompare* grp_readCompare_fu_163;
    fifo_w32_d1_A* items1_stream_V_fifo_U;
    fifo_w32_d1_A* items2_stream_V_fifo_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1024> > adj1_data_V;
    sc_signal< sc_lv<1024> > adj2_data_V;
    sc_signal< sc_lv<6> > i_assign_reg_141;
    sc_signal< sc_lv<6> > i_assign_1_reg_152;
    sc_signal< sc_lv<1024> > adj2_data_V_read_reg_311;
    sc_signal< sc_lv<1024> > adj1_data_V_read_reg_316;
    sc_signal< sc_lv<1> > exitcond_i_fu_170_p2;
    sc_signal< sc_lv<1> > exitcond_i_reg_334;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< sc_lv<32> > items1_stream_V_din;
    sc_signal< sc_logic > items1_stream_V_full_n;
    sc_signal< sc_logic > items1_stream_V_write;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<6> > i_fu_176_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<11> > tmp_12_fu_264_p2;
    sc_signal< sc_lv<11> > tmp_12_reg_343;
    sc_signal< sc_lv<1024> > tmp_15_fu_274_p2;
    sc_signal< sc_lv<1024> > tmp_15_reg_348;
    sc_signal< sc_lv<1> > exitcond_i1_fu_299_p2;
    sc_signal< sc_lv<1> > exitcond_i1_reg_353;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< bool > ap_block_state6_pp1_stage0_iter0;
    sc_signal< sc_lv<32> > items2_stream_V_dout;
    sc_signal< sc_logic > items2_stream_V_empty_n;
    sc_signal< sc_logic > items2_stream_V_read;
    sc_signal< bool > ap_block_state7_pp1_stage0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<6> > i_2_fu_305_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > grp_readCompare_fu_163_ap_idle;
    sc_signal< sc_logic > grp_readCompare_fu_163_ap_ready;
    sc_signal< sc_logic > grp_readCompare_fu_163_ap_done;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state6;
    sc_signal< sc_logic > grp_readCompare_fu_163_ap_start;
    sc_signal< sc_logic > grp_readCompare_fu_163_i_in_stream_V_read;
    sc_signal< sc_lv<32> > grp_readCompare_fu_163_i_out_stream_V_din;
    sc_signal< sc_logic > grp_readCompare_fu_163_i_out_stream_V_write;
    sc_signal< sc_logic > grp_readCompare_fu_163_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > items1_stream_V_dout;
    sc_signal< sc_logic > items1_stream_V_empty_n;
    sc_signal< sc_logic > items1_stream_V_read;
    sc_signal< sc_logic > items2_stream_V_full_n;
    sc_signal< sc_logic > items2_stream_V_write;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<5> > tmp_fu_182_p1;
    sc_signal< sc_lv<10> > Lo_assign_fu_186_p3;
    sc_signal< sc_lv<10> > Hi_assign_fu_194_p2;
    sc_signal< sc_lv<11> > tmp_3_fu_206_p1;
    sc_signal< sc_lv<11> > tmp_4_fu_210_p1;
    sc_signal< sc_lv<1> > tmp_2_fu_200_p2;
    sc_signal< sc_lv<11> > tmp_6_fu_223_p2;
    sc_signal< sc_lv<11> > tmp_8_fu_235_p2;
    sc_signal< sc_lv<1024> > tmp_5_fu_214_p4;
    sc_signal< sc_lv<11> > tmp_7_fu_229_p2;
    sc_signal< sc_lv<11> > tmp_9_fu_241_p3;
    sc_signal< sc_lv<11> > tmp_11_fu_256_p3;
    sc_signal< sc_lv<1024> > tmp_10_fu_249_p3;
    sc_signal< sc_lv<1024> > tmp_13_fu_270_p1;
    sc_signal< sc_lv<1024> > tmp_14_fu_280_p1;
    sc_signal< sc_lv<1024> > tmp_16_fu_283_p2;
    sc_signal< sc_lv<1024> > p_Result_s_fu_289_p2;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage0;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_pp1_stage0;
    static const sc_lv<6> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<10> ap_const_lv10_1F;
    static const sc_lv<32> ap_const_lv32_3FF;
    static const sc_lv<11> ap_const_lv11_3FF;
    static const sc_lv<1024> ap_const_lv1024_lc_1;
    static const sc_lv<32> ap_const_lv32_5;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_Hi_assign_fu_194_p2();
    void thread_Lo_assign_fu_186_p3();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state6_pp1_stage0_iter0();
    void thread_ap_block_state7_pp1_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_condition_pp1_exit_iter0_state6();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_exitcond_i1_fu_299_p2();
    void thread_exitcond_i_fu_170_p2();
    void thread_grp_readCompare_fu_163_ap_start();
    void thread_i_2_fu_305_p2();
    void thread_i_fu_176_p2();
    void thread_items1_stream_V_din();
    void thread_items1_stream_V_read();
    void thread_items1_stream_V_write();
    void thread_items2_stream_V_read();
    void thread_items2_stream_V_write();
    void thread_p_Result_s_fu_289_p2();
    void thread_tmp_10_fu_249_p3();
    void thread_tmp_11_fu_256_p3();
    void thread_tmp_12_fu_264_p2();
    void thread_tmp_13_fu_270_p1();
    void thread_tmp_14_fu_280_p1();
    void thread_tmp_15_fu_274_p2();
    void thread_tmp_16_fu_283_p2();
    void thread_tmp_2_fu_200_p2();
    void thread_tmp_3_fu_206_p1();
    void thread_tmp_4_fu_210_p1();
    void thread_tmp_5_fu_214_p4();
    void thread_tmp_6_fu_223_p2();
    void thread_tmp_7_fu_229_p2();
    void thread_tmp_8_fu_235_p2();
    void thread_tmp_9_fu_241_p3();
    void thread_tmp_fu_182_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
